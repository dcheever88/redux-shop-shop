{"ast":null,"code":"import { useReducer } from 'react';\nimport { UPDATE_PRODUCTS, UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from './actions';\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    // if action type value is the value of `UPDATE_PRODCUTS`, return a new state object with an updated products array\n    case UPDATE_PRODUCTS:\n      return { ...state,\n        products: [...action.products]\n      };\n    // if action type valie is the value of `UPDATE_CATEGORIES`, returna  new state object with an updated categories array\n\n    case UPDATE_CATEGORIES:\n      return { ...state,\n        categories: [...action.categories]\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return { ...state,\n        currentCategory: action.currentCategory\n      };\n    // if its none of these actions, do not update state at all and keep things the same\n\n    default:\n      return state;\n  }\n};\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState);\n}","map":{"version":3,"sources":["/Users/dannycheever/Desktop/projects/shop-shop/client/src/utils/reducers.js"],"names":["useReducer","UPDATE_PRODUCTS","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","reducer","state","action","type","products","categories","currentCategory","useProductReducer","initialState"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;AAEA,SACIC,eADJ,EAEIC,iBAFJ,EAGIC,uBAHJ,QAIO,WAJP;AAMA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,UAAQA,MAAM,CAACC,IAAf;AACI;AACA,SAAKN,eAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHG,QAAAA,QAAQ,EAAE,CAAC,GAAGF,MAAM,CAACE,QAAX;AAFP,OAAP;AAKA;;AACA,SAAKN,iBAAL;AACI,aAAO,EACH,GAAGG,KADA;AAEHI,QAAAA,UAAU,EAAE,CAAC,GAAGH,MAAM,CAACG,UAAX;AAFT,OAAP;;AAKJ,SAAKN,uBAAL;AACI,aAAO,EACH,GAAGE,KADA;AAEHK,QAAAA,eAAe,EAAEJ,MAAM,CAACI;AAFrB,OAAP;AAKJ;;AACA;AACI,aAAOL,KAAP;AAvBZ;AAyBH,CA1BM;AA4BP,OAAO,SAASM,iBAAT,CAA2BC,YAA3B,EAAyC;AAC5C,SAAOZ,UAAU,CAACI,OAAD,EAAUQ,YAAV,CAAjB;AACH","sourcesContent":["import { useReducer } from 'react';\n\nimport {\n    UPDATE_PRODUCTS,\n    UPDATE_CATEGORIES,\n    UPDATE_CURRENT_CATEGORY\n} from './actions';\n\nexport const reducer = (state, action) => {\n    switch (action.type) {\n        // if action type value is the value of `UPDATE_PRODCUTS`, return a new state object with an updated products array\n        case UPDATE_PRODUCTS:\n            return {\n                ...state,\n                products: [...action.products],\n            };\n\n            // if action type valie is the value of `UPDATE_CATEGORIES`, returna  new state object with an updated categories array\n            case UPDATE_CATEGORIES:\n                return {\n                    ...state,\n                    categories: [...action.categories]\n                };\n\n            case UPDATE_CURRENT_CATEGORY:\n                return {\n                    ...state,\n                    currentCategory: action.currentCategory\n                };\n\n            // if its none of these actions, do not update state at all and keep things the same\n            default:\n                return state;\n    }\n};\n\nexport function useProductReducer(initialState) {\n    return useReducer(reducer, initialState);\n}"]},"metadata":{},"sourceType":"module"}